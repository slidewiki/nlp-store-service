language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_38b0370c23f2_key -iv $encrypted_38b0370c23f2_iv
  -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: nZ50gxoFvRRX+r+dHgHcMRI0bgCk7dxkVaSbLCoWUf89bclE/fSfSX9cYddyFzRTqvCHDghYNh+sW+OhBvO+XvvNfXdhfChQwfpfuLZRGs/tFG00gSJskGZIwejlefeqLLsKt8JW4z2tIJqYS2AlOjP6dKmAu7o5hWoMBlyVgQAM9kD6ey1rItMz3qEGAwxfSbp6rN+haudRH11TvIeoOC3cNK09RvqwQ0lDOV8n27aEhC3BPJwfT5ji3hWNmYTHqcA4U6CYOxDpGKq5vccyFPbHNmqNx3B2lVjnVY1oxFAl9qPXJSMXTfPUSHsr+XiCNXQql26dN1QiR8WyQ92J64Fr0lXMI7BGKARzyqMNszGQyyc4IcKmuWCYjDIKeV68lI36KS6RmnLv+yCcE3kb8Qt5tnAHvzJ8D/dmHIc4HkhrqACFumK0+ty0H7H8jmYH2z7qtwIelw0lF60aSEyix3tdGhEM9JkOn/XHwagGnPPRbb4tmX1W8lyaajrZAFLv+zrz6VAokzFv5JlOGjR231TmNAjTAriTF4LrzcUi1dYfMtYgXbG0eD3sDWjxQH3b9rZbBGOGBxwa5Rg407ijfFco+5gxwlPrErU1kvmPgOsi9SfUUACxqW7bfDTs66OWUUAdG+/x0+nT+F8sNJkD3RC8JOdm0Z4wS2ozEOhHitk=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: PCsOCHDKq2yZqssYUMVnc6Uk/+L6A98nyaTSdgsR/RpYT7N4mIYAyzit7sLfQqD8Y+Yg9AwaORPNfc2spfrcU/4/Fh3VCfn+ohSnyVPdNLQi0bVNaZytN0jMkE76po0qqO/XOkk9+LGWAT/KUsTPL9m8EEEZJNqZl1RKV9JF+NaSkJTYL5cR4eRQ4W+1UAO+GO3vxoGJYPOYtMdNM0/CAgfWWWKbw1/F5WDnSozd4tfw8Q8+c1Tg8/nm791LRoUK3PIokVTdqREuA6JcjXzCUn0i6xKgbFzdRToLYuYNsgiYmjNmBtLUAkuYIusyezhGtQgDf7MTltSDTnwnsgnkQDDP6E5oumw3AqZA1ImCi3bVl4kcvgehb0q6MSMkA2QKhQ4WZcgqV+ahpwxZ0lhRAs0dXl57hLZ6HBTYFZjyYYkR/3EQ7tS5nV4KqIVNof3BDPt+AgvrTnrJrahRipc/Tr2wl4L6rGxssZKelWVXiDZDU0HXJUrKYspHj8Exetgrkr4VY0w9wT7CS5Gh3N6QDuOJUS9ZcVxI4JknJa8ZvtJhC5wnCguYDA3Px6+3Q/yMvboEncvmfWXom+KK+MdkdLGX6c9SVW0xmgeLHjiHhdXOmKTeE/ZpeLS4zn4dqqqW3JRhe6I7zml/A0OgYAtmK5B/zlicuDH83+P0SQXI4f0=
  - secure: Gcvzp7sqPQXP8MoO+m19rDrJI28i82Ambx00gTFzb+RXaXycL3tpbNgHDji7IRdq/MWL9qK0hCA9py063o+uZ17i+0fXGHCSM0oqyitSYo7tnThd/kCWSAltLenE34I43P9GljGlcatpQ1lvoBg521qBGpHfFQLPcaIoGOg+FtgZzDaFPhSYhXuSc6NjjrF14OggAhie4pleu76fQNbRAMbcsuPXbAgv5Ce+UL/+5k1W7uV6RzrtlJ8/+Lzsf7rSe9tnK7e4u6HawUYgjAyjsXTlzkemgRgL6YvHqJhNqhcHQTDsQ8YX89oOOHwHwLyovzldGr5HIFDhksNwMJ+ZcikmQI95eXgYWTKEoph9SUQ03UJk3Fvo/xPJ4fJXChWndErAoVsZHkhL7DJOs5C6i8DRfj2uVKme9yx69snoqrse9PUiDHmRd8JRc43ThpT8vKLpy36OkHn/yMTBZnLouqY6O48vzu4ZQKa8d5TotxK/O5l/PdzBPn2TDbb3/w0aNADofNvQbRwC4t4i2dUlpeeGwzu5oBTctQiWzNpz+S+ZaNB+QcQJwNSa+yTR0zozIPbJitTNOuq1XEJ0gs6VUwO6TY53SixI5dFi4Cxsa0+PUNJ+Kc1Eun+8cwQSYNsU6dB7p76vHeqHXsu55DjE1CkB0IU7RALgFLyYcBJjUwM=
  - secure: D6WbgyioYhdi1007McTSq58SyG91ssx4MRNSqqpgkKid9YcmC63ac0jszfc3i6/3hgN5LRh7/vNLTVmeuGK3/lKnybRfS3eanLTV3IM8oDts/tWvsJYkIGaiPbPHhLR5HqtVom+Sr56c84gVfOssIWFeEqcf4FCMGPq86AuY3NVJFDm7n35ZFbdAKusL1+XK6Zk3l9iJaYCAlt8vvSPjGQwcCfY9SL+mkSruMZhG1skJLS6UDVq+PH1benKrk7ix5Nv05jyLeRf5SRVbw8VBY3XlKVE6XxTd3mGQDNQyFisbDcw3PHUYjvhOUSUNwQfRrEH3iOp9M0BQxP7y5x5LKVtGVLYqV9FduNrie/GwMcsylz/01S3XhTncN09dUjHBO73hxWbjQSVgjDUlz0q9WyPDyWkBSs1EVOg+f3h5VsVAwWubxk2JxTPoy9zrXAPD9x9OGjeNxXRUtcoho88m9zuH5vWRrG/23DRhwTTtf/gf32H/UW2YzvkXeJ01dLpLcSXWPCR6QT7IlrO3A/SaYVh7lM7yE3drNVeSKKDpbZTNoEGv7MVeVDHMRuCZvT6952m7AFMc0rFX1Azo5EL9HKTT1p3Z+2ICUYD4BhgrAnP4SO1pt1aemQOVBnhrYeCi+hZ0PcLpkwW0CmNfz9fFUDGM+jIyE2crYX65yIGeumw=
